//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationHierarchy) DeepCopyInto(out *MigrationHierarchy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationHierarchy.
func (in *MigrationHierarchy) DeepCopy() *MigrationHierarchy {
	if in == nil {
		return nil
	}
	out := new(MigrationHierarchy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationHierarchy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationHierarchyList) DeepCopyInto(out *MigrationHierarchyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationHierarchy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationHierarchyList.
func (in *MigrationHierarchyList) DeepCopy() *MigrationHierarchyList {
	if in == nil {
		return nil
	}
	out := new(MigrationHierarchyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationHierarchyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationHierarchySpec) DeepCopyInto(out *MigrationHierarchySpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationHierarchySpec.
func (in *MigrationHierarchySpec) DeepCopy() *MigrationHierarchySpec {
	if in == nil {
		return nil
	}
	out := new(MigrationHierarchySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationHierarchyStatus) DeepCopyInto(out *MigrationHierarchyStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationHierarchyStatus.
func (in *MigrationHierarchyStatus) DeepCopy() *MigrationHierarchyStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationHierarchyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespaces) DeepCopyInto(out *Namespaces) {
	*out = *in
	in.ResourceQuotaSpec.DeepCopyInto(&out.ResourceQuotaSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespaces.
func (in *Namespaces) DeepCopy() *Namespaces {
	if in == nil {
		return nil
	}
	out := new(Namespaces)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnamespace) DeepCopyInto(out *Subnamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnamespace.
func (in *Subnamespace) DeepCopy() *Subnamespace {
	if in == nil {
		return nil
	}
	out := new(Subnamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnamespaceList) DeepCopyInto(out *SubnamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnamespaceList.
func (in *SubnamespaceList) DeepCopy() *SubnamespaceList {
	if in == nil {
		return nil
	}
	out := new(SubnamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnamespaceSpec) DeepCopyInto(out *SubnamespaceSpec) {
	*out = *in
	in.ResourceQuotaSpec.DeepCopyInto(&out.ResourceQuotaSpec)
	out.NamespaceRef = in.NamespaceRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnamespaceSpec.
func (in *SubnamespaceSpec) DeepCopy() *SubnamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(SubnamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnamespaceStatus) DeepCopyInto(out *SubnamespaceStatus) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]Namespaces, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Total.DeepCopyInto(&out.Total)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnamespaceStatus.
func (in *SubnamespaceStatus) DeepCopy() *SubnamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(SubnamespaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Total) DeepCopyInto(out *Total) {
	*out = *in
	if in.Allocated != nil {
		in, out := &in.Allocated, &out.Allocated
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Free != nil {
		in, out := &in.Free, &out.Free
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Total.
func (in *Total) DeepCopy() *Total {
	if in == nil {
		return nil
	}
	out := new(Total)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Updatequota) DeepCopyInto(out *Updatequota) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Updatequota.
func (in *Updatequota) DeepCopy() *Updatequota {
	if in == nil {
		return nil
	}
	out := new(Updatequota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Updatequota) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatequotaList) DeepCopyInto(out *UpdatequotaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Updatequota, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatequotaList.
func (in *UpdatequotaList) DeepCopy() *UpdatequotaList {
	if in == nil {
		return nil
	}
	out := new(UpdatequotaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UpdatequotaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatequotaSpec) DeepCopyInto(out *UpdatequotaSpec) {
	*out = *in
	in.ResourceQuotaSpec.DeepCopyInto(&out.ResourceQuotaSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatequotaSpec.
func (in *UpdatequotaSpec) DeepCopy() *UpdatequotaSpec {
	if in == nil {
		return nil
	}
	out := new(UpdatequotaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatequotaStatus) DeepCopyInto(out *UpdatequotaStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatequotaStatus.
func (in *UpdatequotaStatus) DeepCopy() *UpdatequotaStatus {
	if in == nil {
		return nil
	}
	out := new(UpdatequotaStatus)
	in.DeepCopyInto(out)
	return out
}
