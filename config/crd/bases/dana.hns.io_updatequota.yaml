---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: updatequota.dana.hns.io
spec:
  group: dana.hns.io
  names:
    kind: Updatequota
    listKind: UpdatequotaList
    plural: updatequota
    singular: updatequota
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Updatequota is the Schema for the updatequota API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UpdatequotaSpec defines the desired state of Updatequota
            properties:
              destns:
                description: DestNamespace is the name of the Subnamespace to which
                  resources need to be transferred
                type: string
              resourcequota:
                description: ResourceQuotaSpec represents resources that need to be
                  transferred from one Subnamespace to another
                properties:
                  hard:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'hard is the set of desired hard limits for each
                      named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                    type: object
                  scopeSelector:
                    description: scopeSelector is also a collection of filters like
                      scopes that must match each object tracked by a quota but expressed
                      using ScopeSelectorOperator in combination with possible values.
                      For a resource to match, both scopes AND scopeSelector (if specified
                      in spec), must be matched.
                    properties:
                      matchExpressions:
                        description: A list of scope selector requirements by scope
                          of the resources.
                        items:
                          description: A scoped-resource selector requirement is a
                            selector that contains values, a scope name, and an operator
                            that relates the scope name and values.
                          properties:
                            operator:
                              description: Represents a scope's relationship to a
                                set of values. Valid operators are In, NotIn, Exists,
                                DoesNotExist.
                              type: string
                            scopeName:
                              description: The name of the scope that the selector
                                applies to.
                              type: string
                            values:
                              description: An array of string values. If the operator
                                is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during
                                a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - operator
                          - scopeName
                          type: object
                        type: array
                    type: object
                    x-kubernetes-map-type: atomic
                  scopes:
                    description: A collection of filters that must match each object
                      tracked by a quota. If not specified, the quota matches all
                      objects.
                    items:
                      description: A ResourceQuotaScope defines a filter that must
                        match each object tracked by a quota
                      type: string
                    type: array
                type: object
              sourcens:
                description: SourceNamespace is name of the Subnamespace from which
                  resources need to be transferred
                type: string
            required:
            - destns
            - resourcequota
            - sourcens
            type: object
          status:
            description: UpdatequotaStatus defines the observed state of Updatequota
            properties:
              phase:
                description: 'Phase acts like a state machine for the Updatequota.
                  It is a string and can be one of the following: "Error" - state
                  for a Updatequota indicating that the operation could not be completed
                  due to an error "Complete" - state for a Updatequota indicating
                  that the operation completed successfully'
                type: string
              reason:
                description: Reason is a string explaining why an error occurred if
                  it did; otherwise itâ€™s empty
                type: string
            type: object
        type: object
    served: true
    storage: true
